#!/bin/bash

set -eux

HYPERVISOR_NAME="{{ inventory_hostname }}"

if [ ! -d "{{ templates_dir_path }}" ]; then
  echo "Templates directory ({{ templates_dir_path }}) is not available..."
  exit 1
fi

IMAGE_URL="{{ rhel_guest_image_url }}"

infrared virsh \
    --topology-nodes undercloud:1,controller:3,compute:1 \
    -e override.controller.memory=8192 \
    -e override.undercloud.memory=28672 \
    -e override.controller.cpu=4 \
    -e override.undercloud.cpu=6 \
    --host-address $HYPERVISOR_NAME \
    --host-user root \
    --host-key ~/.ssh/id_rsa \
    --image-url $IMAGE_URL \
    --topology-network 3_bridges_1_net

infrared tripleo-undercloud \
    --mirror "rdu2" \
    --images-task=rpm \
    --images-update no \
    --version="{{ rhosp_version }}" \
    --config-file "{{ templates_dir_path }}/undercloud_hybrid.conf" \
    --tls-ca 'https://password.corp.redhat.com/RH-IT-Root-CA.crt' \
    --config-options DEFAULT.undercloud_timezone=UTC \
    --build="{{ rhosp_build }}"

# Configure undercloud with required packages and configs
infrared ssh undercloud-0 "sudo yum install -y wget tmux vim"
infrared ssh undercloud-0 "echo 'set-window-option -g xterm-keys on' >~/.tmux.conf"

# Copy Hypervisor authorized keys to undercloud
scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /root/.ssh/authorized_keys stack@undercloud-0:~/hypervisor.authorized_keys
infrared ssh undercloud-0 "cat ~/hypervisor.authorized_keys >>~/.ssh/authorized_keys"

mkdir -p ~/.config/openstack
if [ -f ~/clouds.yaml ]; then
    cp ~/clouds.yaml ~/.config/openstack/
fi

# Copy rhel qcow2 image for workload creation
scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /var/lib/libvirt/images/rhel*.qcow2 stack@undercloud-0:~/rhel.qcow2

infrared tripleo-overcloud \
    --version {{ rhosp_version }} \
    --deployment-files "{{ templates_dir_path }}"  \
    --overcloud-script "{{ templates_dir_path }}/overcloud_deploy.sh" \
    --introspect=yes \
    --tagging=yes \
    --deploy=yes \
    -e provison_virsh_network_name=br-ctlplane \
    --vbmc-force False \
    --vbmc-host hypervisor \
    --hybrid ~/hybrid_nodes.json
